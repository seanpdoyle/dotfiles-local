bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Simplify status bar display
set-option -g status-left '[#S]'
set-option -g status-right "#(battery -t -g black -a)  #(date '+%a, %b %d - %I:%M') "

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# smart pane switching with awareness of vim splits
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# You probably already put this in
set-option -g prefix C-a

unbind-key C-b
bind-key C-a send-prefix
bind-key C-b send-keys "tat && exit" "C-m"

# mouse behavior
set-option -s escape-time 0

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key C-\ split-window -h -c '#{pane_current_path}'

bind-key -n M-h resize-pane -L 2
bind-key -n M-l resize-pane -R 2
bind-key -n M-j resize-pane  -D 1
bind-key -n M-k resize-pane -U 1

bind-key c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle
