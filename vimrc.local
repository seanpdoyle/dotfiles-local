" Color scheme
colorscheme github
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

let g:syntastic_html_checkers = []
let g:rspec_command = "Dispatch bin/rspec {spec}"

" Terminal.app keeps having a notification and "jumping" on the dock from Vim's
" bells, and this disables terminal Vim's bells.
" http://vim.wikia.com/wiki/Disable_beeping
set noerrorbells visualbell t_vb=

autocmd VimResized * :wincmd =
autocmd BufRead,BufNewFile .{jscs,jshint,eslint}rc setfiletype json

command! Q q " Bind :Q to :q
command! Qa qa " Bind :Qa to :qa
command! W w " Bind :W to :w

map <Leader><CR> :let g:rspec_command = "Dispatch bundle exec rspec {spec}"<CR>

map <Leader>tq :!./node_modules/.bin/qunit -c index.js -t %<CR>

nnoremap <Leader>- :wincmd _<CR>:wincmd \|<CR>
nnoremap <Leader>= :wincmd =<CR>

map <Leader>i mmgg=G`m<CR>
nmap _ -

" Insert a pry statement
nmap <leader>bp orequire 'pry'; binding.pry<esc>^

" Insert a js debugger
nmap <leader>jd odebugger;<esc>^

" Insert a pauseTest statement
nmap <leader>pt oreturn pauseTest();<esc>:w<CR>

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

let g:rails_projections = {
      \ "app/services/*.rb": {
      \   "command": "service",
      \   "template": "class {camelcase|capitalize|colons}\nend",
      \   "test": [
      \     "spec/services/{}_spec.rb"
      \   ]
      \ }
      \}

let g:projectionist_heuristics = {
      \ "spec/*": {
      \   "spec/support/api/schemas/*.json": {
      \     "type": "json",
      \     "template": [
      \       "{",
      \       "  \"type\": \"object\",",
      \       "  \"required\": [",
      \       "  ],",
      \       "  \"properties\": {",
      \       "  }",
      \       "}",
      \     ]
      \   }
      \ },
      \ "ember-cli-build.js": {
      \   "app/routes/*.js": {
      \     "type": "route",
      \     "template": [
      \       "import Ember from 'ember';",
      \       "",
      \       "export default Ember.Route.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/templates/{}.hbs"
      \   },
      \   "app/controllers/*.js": {
      \     "type": "controller",
      \     "template": [
      \       "import Ember from 'ember';",
      \       "",
      \       "export default Ember.Controller.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/templates/{}.hbs"
      \   },
      \   "app/components/*.js": {
      \     "type": "component",
      \     "template": [
      \       "import Ember from 'ember';",
      \       "",
      \       "export default Ember.Component.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/templates/components/{}.hbs"
      \   },
      \   "app/templates/*.js": {
      \     "type": "template",
      \     "template": [
      \       "{{outlet}}",
      \     ]
      \   },
      \   "app/models/*.js": {
      \     "type": "model",
      \     "template": [
      \       "import DS from 'ember-data';",
      \       "",
      \       "export default DS.Model.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/adapters/{}.js"
      \   },
      \   "app/adapters/*.js": {
      \     "type": "adapter",
      \     "template": [
      \       "import ApplicationAdapter from './application';",
      \       "",
      \       "export default ApplicationAdapter.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/serializers/{}.js"
      \   },
      \   "app/serializers/*.js": {
      \     "type": "serializer",
      \     "template": [
      \       "import ApplicationSerializer from './application';",
      \       "",
      \       "export default ApplicationSerializer.extend({",
      \       "});",
      \     ],
      \     "alternate": "app/models/{}.js"
      \   },
      \ },
      \}
